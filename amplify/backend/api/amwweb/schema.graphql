type Story
  @model
  @auth(rules: [
    { allow: owner, ownerField: "owner", operations: [create, update, delete] },
    { allow: private, operations: [read] } # any signed-in user can read
  ]) {
  id: ID!
  title: String!
  content: String
  owner: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Chapter
  @model
  @auth(rules: [
    { allow: owner, ownerField: "owner", operations: [create, update, delete] },
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  storyID: ID!
  title: String!
  text: String
  owner: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Moment
  @model
  @auth(rules: [
    { allow: owner, ownerField: "owner", operations: [create, update, delete] },
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  chapterID: ID!
  title: String        # ðŸ‘ˆ use title to match your UI
  owner: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}
